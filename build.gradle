plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.6'
}

group = 'com.bitaspire'
version = '1.0.1'
description = 'CyberLevels'

repositories {
    mavenLocal()
    flatDir {
        dirs 'libs'
    }

    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/groups/public/')
    }

    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://croabeast.github.io/repo/')
    }
}

dependencies {
    // Spigot API
    compileOnly "org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT"

    // Core dependency
    implementation 'com.github.Kihsomray:CyberCore:1.3.32'

    // Lombok
    compileOnly "org.projectlombok:lombok:1.18.38"
    annotationProcessor "org.projectlombok:lombok:1.18.38"

    // Other plugin APIs
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly files('libs/RivalHarvesterHoesAPI.jar')
    compileOnly files('libs/RivalPickaxesAPI.jar')

    // Database
    compileOnly 'com.zaxxer:HikariCP:3.4.5'
    compileOnly 'mysql:mysql-connector-java:8.0.21'
    compileOnly 'org.xerial:sqlite-jdbc:3.36.0.3'
    compileOnly 'org.postgresql:postgresql:42.7.7'

    // Misc utils
    implementation 'org.bstats:bstats-bukkit:3.0.2'
    implementation 'me.croabeast:YAML-API:1.1'
    implementation 'me.croabeast:GlobalScheduler:1.0'
    compileOnly 'ch.obermuhlner:big-math:2.3.2'
    compileOnly 'org.apache.commons:commons-lang3:3.18.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.build.dependsOn(tasks.shadowJar)

tasks {
    shadowJar {
        archiveClassifier.set('')

        exclude(
                'META-INF/**', 'org/apache/commons/**', 'org/intellij/**',
                'org/jetbrains/**', 'me/croabeast/file/plugin/YAMLPlugin.*'
        )

        relocate('org.bstats', 'com.bitaspire.libs.bstats')
        relocate('me.croabeast.common', 'com.bitaspire.libs.file')
        relocate('me.croabeast', 'com.bitaspire.libs')
        relocate('net.zerotoil.dev', 'com.bitaspire.libs')
    }
}